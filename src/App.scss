/**
* Use this file for
* - app specific styles
* - shared element styles
**/

.tollgate-captive-portal {
  &-interface {
    display: flex;
    flex-direction: column;
    height: 100%;
    min-height: 100svh;
    position: relative;
    z-index: 1;
    margin-left: 1.5rem;
    margin-right: 1.5rem;
    justify-content: center;
  }
  
  &-header {
    padding-top: clamp(2rem, 4.8077vw + .0769rem, 5rem); /* 400px = 20px to 1024px = 50px */
    padding-bottom: clamp(2rem, 4.8077vw + .0769rem, 5rem); /* 400px = 20px to 1024px = 50px */
    display: flex;
    align-items: flex-end;
    justify-content: center;
  
    > img {
      width: clamp(18rem, 6.4103vw + 15.4359rem, 22rem); /* 400px = 180px to 1024px = 220px */
      max-width: 100%;
      max-height: 100%;
    }
  }
  
  &-content {
    display: flex;
    align-items: flex-start;
    justify-content: center;
    color: var(--color);
  }
  
  &-content-container {
    width: 500px;
    max-width: 100%;
    border-radius: var(--border-radius-large);
    box-shadow: 0 0 5rem 1rem rgba(0,0,0,0.05);
  }
  
  &-tabs {
    display: flex;
  }
  
  &-tabs-tab {
    padding: 1rem;
    flex: 1; /* 50/50 */
    text-align: center;
    appearance: none;
    border: none;
    background-color: transparent;
    font-weight: 600;
    background-color: rgba(255,255,255, .9);

    &-cashu {
      border-top-left-radius: var(--border-radius-large);
    }
    &-lightning {
      border-top-right-radius: var(--border-radius-large);
    }
  }
  
  &-tabs-tab[data-active=false] {
    opacity: .85;

    &:hover,
    &:focus,
    &:active {
      opacity: .9;
    }
  }

  &-tabs-tab-cashu[data-active=false] {
    border-top-left-radius: var(--border-radius-large);
    box-shadow: inset .15rem -.15rem .5rem 0 rgba(0,0,0,0.05);
  }
  
  &-tabs-tab-lightning[data-active=false] {
    border-top-right-radius: var(--border-radius-large);
    box-shadow: inset .15rem -.15rem .5rem 0 rgba(0,0,0,0.05);
  }
  
  &-view {
    padding: .8em;
    background-color: rgba(255,255,255, .9);
    border-bottom-right-radius: var(--border-radius-large);
    border-bottom-left-radius: var(--border-radius-large);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  &-method {
    display: flex;
    flex-direction: column;
    gap: 1rem;

    &-content {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    &-header {
      text-align: center;
      padding-top: 1rem;
      padding-bottom: 1rem;
      display: flex;
      flex-direction: column;
      gap: .5rem;
    
      h1 {
        font-size: var(--font-size-large);
      }
    
      h2 {
        font-size: var(--font-size);
        font-weight: 400;
      }
    }

    &-options {
      padding: .8rem;
      display: flex;
      flex-direction: column;
      gap: .6rem;
      background-color: white;
      border-radius: var(--border-radius);

      h5 {
        font-size: var(--font-size-small);
        font-weight: 600;
      }

      button.cta,
      button.ghost {
        font-size: var(--font-size-small);
        padding: .4rem;
        display: flex;
        align-items: center;
        flex-wrap: nowrap;
        justify-content: space-between;
        column-gap: .4rem;

        &.active {
          .mint-meta-address,
          .mint-meta-price-per-step {
            background-color: var(--color-white-transparent);
            color: var(--color-cta);
          }
        }
      }

      .mint-price {
        display: flex;
        align-items: center;
        gap: .6rem;
        text-transform: uppercase;
        font-size: var(--font-size);

        // prevent shrinking 
        flex: 1 0 auto;
      }

      .mint-meta {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: .4rem;
        justify-content: flex-end;

        &-address,
        &-price-per-step {
          background-color: var(--color-gray-darken);
          padding: 0 .6rem;
          border-radius: var(--border-radius-small);
          color: var(--color-white);
        }
      }
    }

    &-submit .cta {
      font-weight: 400;
    }
    
    &-footer {
      margin-top: .2rem;
      text-align: center;
      font-size: var(--font-size-xsmall);
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
      gap: .4rem;
      flex-wrap: wrap;
    }
  }

  &-deviceinfo {
    text-transform: uppercase;
  }

  &-loading,
  &-processing,
  &-access-granted {
    padding-top: 4rem;
    padding-bottom: 4rem;
    gap: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  &-access-granted-label {
    gap: .4rem;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;text-align: center;
  }

  &-access-granted-checkmark {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  &-footer {
    padding-top: clamp(2rem, 1.6026vw + 1.359rem, 3.5rem); /* 400px = 20px to 1024px = 30px */
    padding-bottom: clamp(2rem, 3.2051vw + .7179rem, 4rem); /* 400px = 20px to 1024px = 40px */
    text-align: center;
    font-size: var(--font-size-small);
    color: var(--color-negative);
  }

  &-scan-qr {
    &-container {
      position: fixed;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      z-index: 9999;
      overflow: hidden;
      // backdrop-filter: blur(1rem);
      background-color: var(--color-black);
    }

    &-video-element,
    &-overlay {
      position: absolute;
      object-fit: cover;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }

    &-overlay {
      position: absolute;
      top: 3rem;
      left: 3rem;
      right: 3rem;
      bottom: 15rem;
      max-width: calc(100vw - 6rem);
      max-height: calc(100vh - 15rem);
      box-sizing: border-box;
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 2;

      &-inner {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: center;
        aspect-ratio: 1 / 1;
        border-radius: var(--border-radius);

        // qr code rectangle appearance
        background-image: url("data:image/svg+xml,%3csvg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%' height='100%' fill='none' rx='.4rem' ry='.4rem' stroke='rgba(255, 181, 76, .8)' stroke-width='.3rem' stroke-dasharray='66% 33%' stroke-dashoffset='33%' /%3e%3c/svg%3e");
        
        /*
          Calculate the available width and height for the square:
          Available Width = (100vw - 6rem)
          Available Height = (100vh - 15rem)

          The square's side length should be the MINIMUM of these two values.
        */
        width: min(calc(100vw - 6rem), calc(100vh - 15rem));

        &.error {
          background-image: url("data:image/svg+xml,%3csvg width='100%' height='100%' xmlns='http://www.w3.org/2000/svg'%3e%3crect width='100%' height='100%' fill='none' rx='.4rem' ry='.4rem' stroke='rgba(220,33,33,0.53)' stroke-width='.3rem' stroke-dasharray='66% 33%' stroke-dashoffset='33%' /%3e%3c/svg%3e");
        }

        &:after {
          content: attr(data-error);
          padding: 3rem;
          text-align: center;
        }
      }
    }

    &-button-bar {
      position: absolute;
      left: 0;
      bottom: 0;
      right: 0;
      padding: 3rem;
      display: flex;
      align-items: center;
      justify-content: space-between;
      flex-wrap: wrap;
      gap: 1rem;
      z-index: 2;

      button {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 5.5rem;
        height: 5.5rem;

        svg {
          width: 100%;
          height: 100%;
        }
      }

      button.flip-camera {
        display: none;
      }

      button.cancel {
        border-color: var(--color-red);
        color: var(--color-white);
        background-color: var(--color-red-transparent);
      }
    }

    &-button-bar-left {
      display: flex;
      align-items: center;
      justify-content: space-between;
      gap: 1rem;
    }
  }

  button.clipboard {
    &-success.cta,
    &-success.ghost {
      border-color: var(--color-green);
      background-color: var(--color-green-transparent);
      pointer-events: none;
      cursor: not-allowed;
    }
    &-error.cta,
    &-error.ghost {
      border-color: var(--color-error);
      background-color: var(--color-error-transparent);
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}